package ru.load.jmh.demo.stringbuilder;

public class StringBuilderExample {
    /*
        https://habr.com/ru/company/piter/blog/358898/
        Неиспользование построителя строк внутри цикла

        Если вы не пользуетесь построителем строк внутри цикла, то производительность кода сильно падает.
        В упрощенной реализации мы наращивали бы строку внутри цикла при помощи оператора +=, прикрепляя
        таким образом новую часть строки к уже имеющейся. Проблема с данным подходом заключается в том,
        что при каждой итерации цикла будет выделяться новая строка, а старую строку на каждой итерации
        придется копировать в новую.

        Даже сама по себе эта операция затратна, не говоря уже о лишней нагрузке, связанной с дополнительной
        сборкой мусора, необходимой при создании и отбрасывании такого количества строк.
        Воспользовавшись StringBuilder, мы ограничим количество операций выделения памяти, что позволит нам сильно
        повысить производительность.
     */

    // ~11 операций в секунду
    public String stringAppendLoop() {
        String s = "";

        for (int i = 0;i < 10000;i++) {
            if (s.length() > 0) s += ", ";
            s += "bar";
        }
        return s;
    }

    // ~7 000 операций в секунду
    public String stringAppendBuilderLoop() {
        StringBuilder sb = new StringBuilder();

        for (int i = 0;i < 10000;i++) {
            if (sb.length() > 0) sb.append(", ");
            sb.append("bar");
        }
        return sb.toString();
    }
}
